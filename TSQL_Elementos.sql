/*	TSQL_ELEMENTOS
		Declarando variáveis
*/

DECLARE @IDADE INT
DECLARE @NOME VARCHAR(200)
DECLARE @DATA DATE

DECLARE @IDADE2 INT, @NOME2 VARCHAR(200), @DATA2 DATE

SET @IDADE = 20
--PRINT @IDADE

SET @NOME = 'JOÃO DA SILVA'
--PRINT @NOME

SET @DATA = '20180517'
--PRINT @DATA

DECLARE @CPF VARCHAR(12)
SET @CPF = '2600586709'

--SELECT NOME, [DATA DE NASCIMENTO], IDADE FROM [TABELA DE CLIENTES]
--WHERE CPF = @CPF

SELECT @NOME2 = NOME, @DATA2 = [DATA DE NASCIMENTO], @IDADE2 = IDADE 
FROM [TABELA DE CLIENTES]
WHERE CPF = @CPF

PRINT @NOME2
PRINT @DATA2
PRINT @IDADE2


DECLARE @MATRICULA VARCHAR(5), @NOME VARCHAR(100), @PERCENTUAL FLOAT, @DATA DATE, @FERIAS BIT
DECLARE @BAIRRO VARCHAR(100)

SET @MATRICULA = '00240'
SET @NOME = 'Cláudia Rodrigues'
SET @PERCENTUAL = 0.10
SET @DATA = '20120312'
SET @FERIAS = 1
SET @BAIRRO = 'Jardins'

INSERT INTO [TABELA DE VENDEDORES] (MATRICULA, NOME, [PERCENTUAL COMISSÃO]
, [DATA ADMISSÃO], [DE FERIAS], BAIRRO)
VALUES
(@MATRICULA, @NOME, @PERCENTUAL, @DATA, @FERIAS, @BAIRRO)

SELECT * FROM [TABELA DE VENDEDORES]



/*	Controle de fluxo
*/

IF OBJECT_ID('TABELA_TESTE', 'U') IS NOT NULL DROP TABLE TABELA_TESTE
IF OBJECT_ID('TABELA_TESTE', 'U') IS NULL CREATE TABLE TABELA_TESTE (ID VARCHAR(10))



/*	Controle de fluxo dos valores de variáveis
*/

SELECT GETDATE()
SELECT DATENAME(WEEKDAY, DATEADD(DAY, 6, GETDATE()))

DECLARE @DIA_SEMANA VARCHAR(20)
DECLARE @NUMERO_DIAS INT
SET @NUMERO_DIAS = 9
SET @DIA_SEMANA = DATENAME(WEEKDAY, DATEADD(DAY, @NUMERO_DIAS, GETDATE()))
PRINT @DIA_SEMANA
IF @DIA_SEMANA = 'Domingo' OR @DIA_SEMANA = 'Sábado'
   PRINT 'Este dia é fim de semana'
ELSE
   PRINT 'Este dia é dia da semana'



/*	Controle de fluxo usando um SELECT
*/

SELECT * FROM [TABELA DE CLIENTES]
SELECT SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = 'Água Santa'

DECLARE @LIMITE_MAXIMO FLOAT, @LIMITE_ATUAL FLOAT
DECLARE @BAIRRO VARCHAR(20)

SET @BAIRRO = 'Água Santa'
SET @LIMITE_MAXIMO = 50000
SELECT @LIMITE_ATUAL = SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = @BAIRRO
IF @LIMITE_MAXIMO <= (SELECT SUM([LIMITE DE CREDITO]) FROM [TABELA DE CLIENTES] WHERE BAIRRO = @BAIRRO)
BEGIN
   PRINT 'Valor estourou. Não é possível abrir novos créditos'
END
ELSE
BEGIN
   PRINT 'Valor não estourou. É possível abrir novos créditos'
END



/*	Loop WHILE
*/

DECLARE @LIMITE_MINIMO INT, @LIMITE_MAXIMO INT, @LIMITE_BREAK INT

SET @LIMITE_MINIMO = 1
SET @LIMITE_MAXIMO = 10
SET @LIMITE_BREAK = 12

WHILE @LIMITE_MINIMO <= @LIMITE_MAXIMO
BEGIN
   PRINT @LIMITE_MINIMO
   SET @LIMITE_MINIMO = @LIMITE_MINIMO + 1
   IF @LIMITE_MINIMO = @LIMITE_BREAK
   BEGIN
      PRINT 'Saindo por causa do BREAK'
      BREAK
   END
END



/*	Loop para inserir registros em uma tabela
*/

IF OBJECT_ID ('TABELA DE NUMEROS','U') IS NOT NULL
   DROP TABLE [TABELA DE NUMEROS]

CREATE TABLE [TABELA DE NUMEROS] ([NUMERO] INT, [STATUS] VARCHAR(200))

DECLARE @LIMITE_MINIMO INT, @LIMITE_MAXIMO INT, @CONTADOR_NOTAS INT

SET @LIMITE_MINIMO = 1
SET @LIMITE_MAXIMO = 100000

SET NOCOUNT ON
WHILE @LIMITE_MINIMO <= @LIMITE_MAXIMO
BEGIN
   SELECT @CONTADOR_NOTAS = COUNT(*) FROM [NOTAS FISCAIS] WHERE [NUMERO] = @LIMITE_MINIMO
   IF @CONTADOR_NOTAS > 0 
       INSERT INTO [TABELA DE NUMEROS] ([NUMERO], [STATUS]) VALUES (@LIMITE_MINIMO, 'É nota fiscal')
   ELSE
       INSERT INTO [TABELA DE NUMEROS] ([NUMERO], [STATUS]) VALUES (@LIMITE_MINIMO, 'Não é nota fiscal')
   SET @LIMITE_MINIMO = @LIMITE_MINIMO + 1   
END

SELECT * FROM [TABELA DE NUMEROS]



/*	Tabelas temporárias
*/

--# Tabelas que valem para conexão vigente
--## Tabelas que valem para várias conexões
--@ Tabelas que valem para o procedimento que está sendo executado

