/*	TSQL STORED PROCEDURES
		Criando UDF
*/

CREATE PROCEDURE BuscaPorEntidades @ENTIDADE AS VARCHAR(10)
AS
BEGIN
IF @ENTIDADE = 'CLIENTES'
  SELECT [CPF] AS IDENTIFICADOR, [NOME] AS DESCRITOR, 
  [BAIRRO] AS BAIRRO FROM [TABELA DE CLIENTES]
ELSE IF @ENTIDADE = 'VENDEDORES'
  SELECT [MATRICULA] AS IDENTIFICADOR, [NOME] AS DESCRITOR, 
  [BAIRRO] AS BAIRRO FROM [TABELA DE VENDEDORES]
END

EXEC BuscaPorEntidades @ENTIDADE = 'CLIENTES'
EXEC BuscaPorEntidades @ENTIDADE = 'VENDEDORES'



/*	Procedure para cálculos
*/
CREATE PROCEDURE CalculaIdade
AS
BEGIN
   UPDATE [TABELA DE CLIENTES] SET IDADE = DATEDIFF(YEAR, [DATA DE NASCIMENTO], GETDATE())
END

INSERT INTO [TABELA DE CLIENTES] (CPF, [NOME], [ENDERECO 1], BAIRRO, CIDADE, ESTADO, CEP, [DATA DE NASCIMENTO],
SEXO, [LIMITE DE CREDITO], [VOLUME DE COMPRA], [PRIMEIRA COMPRA])
VALUES
('123123123','JOÃO MACHADO', 'RUA PROJETADA A','MADUREIRA','Rio de Janeiro','RJ','20000',
'20000306','M',120000, 120000, 120000)

SELECT * FROM [TABELA DE CLIENTES] WHERE CPF = '123123123'
EXEC CalculaIdade



/*	Procedure já existente do sistema
*/
EXEC sp_columns @table_name = 'TABELA DE CLIENTES', @table_owner = 'dbo'

EXEC sp_tables @table_name = 'TAB%', @table_owner = 'dbo', @table_qualifier = 'SUCOS_VENDAS'



/*	Entrada de dados escalar
*/
CREATE PROCEDURE BuscaNotasCliente
@CPF AS VARCHAR(12),
@DATA_INICIAL AS DATETIME = '20160101',
@DATA_FINAL AS DATETIME = '20161231'
AS
BEGIN
   SELECT * FROM [NOTAS FISCAIS] WHERE CPF = @CPF AND [DATA] >= @DATA_INICIAL AND [DATA] <= @DATA_FINAL
END

EXEC BuscaNotasCliente @CPF = '19290992743'
EXEC BuscaNotasCliente @CPF = '19290992743', @DATA_INICIAL = '20161201'
EXEC BuscaNotasCliente @CPF = '19290992743', @DATA_FINAL = '20160131'
EXEC BuscaNotasCliente @DATA_FINAL = '20160131', @CPF = '19290992743', @DATA_INICIAL = '20160105'

EXEC BuscaNotasCliente '19290992743'
EXEC BuscaNotasCliente '19290992743', '20161201'
EXEC BuscaNotasCliente '19290992743', DEFAULT, '20160131'



/*	Entrada tabela
*/
SELECT A.[CPF], A.[NOME], SUM(C.[QUANTIDADE] * C.[PREÇO]) AS FATURAMENTO
FROM [TABELA DE CLIENTES] A INNER JOIN [NOTAS FISCAIS] B
ON A.CPF = B.CPF AND YEAR(B.[DATA]) = 2016
INNER JOIN [ITENS NOTAS FISCAIS] C ON B.NUMERO = C.NUMERO
GROUP BY A.[CPF], A.[NOME]

CREATE TYPE ListaClientes as TABLE
(CPF VARCHAR(12) NOT NULL)

DECLARE @Lista AS ListaClientes
INSERT INTO @Lista (CPF) VALUES ('8502682733'), ('8719655770'), ('9283760794')
SELECT * FROM @Lista

SELECT * FROM [TABELA DE CLIENTES]


DECLARE @Lista AS ListaClientes
INSERT INTO @Lista (CPF) VALUES ('8502682733'), ('8719655770'), ('9283760794')

SELECT A.[CPF], A.[NOME], SUM(C.[QUANTIDADE] * C.[PREÇO]) AS FATURAMENTO
FROM [TABELA DE CLIENTES] A INNER JOIN [NOTAS FISCAIS] B
ON A.CPF = B.CPF AND YEAR(B.[DATA]) = 2016
INNER JOIN [ITENS NOTAS FISCAIS] C ON B.NUMERO = C.NUMERO
INNER JOIN @Lista D ON A.CPF = D.CPF
GROUP BY A.[CPF], A.[NOME]

CREATE PROCEDURE FaturamentoClientes2016
@LISTA AS ListaClientes READONLY
AS
SELECT A.[CPF], A.[NOME], SUM(C.[QUANTIDADE] * C.[PREÇO]) AS FATURAMENTO
FROM [TABELA DE CLIENTES] A INNER JOIN [NOTAS FISCAIS] B
ON A.CPF = B.CPF AND YEAR(B.[DATA]) = 2016
INNER JOIN [ITENS NOTAS FISCAIS] C ON B.NUMERO = C.NUMERO
INNER JOIN @LISTA D ON A.CPF = D.CPF
GROUP BY A.[CPF], A.[NOME]


DECLARE @Lista AS ListaClientes
INSERT INTO @Lista (CPF) VALUES ('5840119709'), ('7771579779'), ('9283760794')
EXEC FaturamentoClientes2016 @LISTA = @Lista


SELECT * FROM [TABELA DE CLIENTES]




/*	Parâmetros de saída
*/
SELECT COUNT(*) FROM [NOTAS FISCAIS] WHERE CPF = '19290992743'
AND YEAR([DATA]) = 2016

SELECT SUM(QUANTIDADE * [PREÇO]) FROM [ITENS NOTAS FISCAIS] B
INNER JOIN [NOTAS FISCAIS] A ON A.NUMERO = B.NUMERO
WHERE CPF = '19290992743'
AND YEAR([DATA]) = 2016

CREATE PROCEDURE RetornaValores
@CPF AS VARCHAR(12),
@ANO AS INT,
@NUM_NOTAS AS INT OUTPUT,
@FATURAMENTO AS FLOAT OUTPUT
AS
BEGIN
   SELECT @NUM_NOTAS = COUNT(*) FROM [NOTAS FISCAIS] WHERE CPF = @CPF
   AND YEAR([DATA]) = @ANO

   SELECT @FATURAMENTO = SUM(QUANTIDADE * [PREÇO]) FROM [ITENS NOTAS FISCAIS] B
   INNER JOIN [NOTAS FISCAIS] A ON A.NUMERO = B.NUMERO
   WHERE CPF = @CPF
   AND YEAR([DATA]) = @ANO
END 

DECLARE @NUMERO_NOTAS INT, @FATURAMENTO FLOAT
DECLARE @CPF VARCHAR(12), @ANO INT
SET @CPF = '19290992743'
SET @ANO = 2017
EXEC RetornaValores @CPF = @CPF, @ANO = @ANO
, @NUM_NOTAS = @NUMERO_NOTAS OUTPUT, @FATURAMENTO = @FATURAMENTO OUTPUT
SELECT @NUMERO_NOTAS, @FATURAMENTO



/*	Alterando e excluindo uma stored procedures
*/
USE [SUCOS_VENDAS]
GO

/****** Object:  StoredProcedure [dbo].[BuscaPorEntidades]    Script Date: 18/05/2018 12:31:41 ******/
SET ANSI_NULLS ON
GO

SET QUOTED_IDENTIFIER ON
GO

CREATE PROCEDURE [dbo].[BuscaPorEntidades2] @ENTIDADE AS VARCHAR(10)
AS
BEGIN
IF @ENTIDADE = 'CLIENTES'
  SELECT [CPF] AS IDENTIFICADOR, [NOME] AS DESCRITOR, 
  [BAIRRO] AS BAIRRO FROM [TABELA DE CLIENTES]
ELSE IF @ENTIDADE = 'VENDEDORES'
  SELECT [MATRICULA] AS IDENTIFICADOR, [NOME] AS DESCRITOR, 
  [BAIRRO] AS BAIRRO FROM [TABELA DE VENDEDORES]
END
GO

EXEC BuscaPorEntidades2 'CLIENTES'

ALTER PROCEDURE [dbo].[BuscaPorEntidades2] @ENTIDADE AS VARCHAR(10)
AS
BEGIN
IF @ENTIDADE = 'CLIENTES'
  SELECT [CPF] AS IDENTIFICADOR, [NOME] AS DESCRITOR FROM [TABELA DE CLIENTES]
ELSE IF @ENTIDADE = 'VENDEDORES'
  SELECT [MATRICULA] AS IDENTIFICADOR, [NOME] AS DESCRITOR FROM [TABELA DE VENDEDORES]
END

EXEC BuscaPorEntidades2 'CLIENTES'

IF OBJECT_ID('BuscaPorEntidades2', 'P') IS NOT NULL
  DROP PROCEDURE BuscaPorEntidades2


